---
import Layout from "@layouts/Layout.astro";
import PokemonCard from "@components/pokemons/PokemonCard.astro";
import type { GetStaticPaths } from "astro";
import type { PokemonListResponse } from "@interfaces/pokemon-list.response";
import Title from "@components/shared/Title.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=1304");
  const { results } = (await resp.json()) as PokemonListResponse;
  return results.map((pokemon) => ({
    params: { name: pokemon.name },
    props: { name: pokemon.name, url: pokemon.url },
  }));
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;
const id = url.split("/").at(-2);
const imageURL =
"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/" +
id +
".png";
const audioURL = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
---

<Layout
title={`Pokémon - #${id}-${name}`}
,
description=`Información sobre el pokémon ${name}`
image={imageURL}
>
<section class="mt-10 mx-10 flex flex-col justify-center items-center">
  <div class="flex flex-row">
    <div>
      <!-- <a class="text-blue-500" href="/">Regresar</a> -->
      <button onclick="history.back()" class="text-blue-500">Regresar</button>
      <Title>{name}</Title>
    </div>
    <button
    id="btn-favorite"
    class="ml-5 mt-8 hover:animate-pulse"
    data-name={name}
    data-id={id}
    >
    <Icon name="heart-outline" size={50} data-outline />
    <Icon class="hidden" name="heart-full" size={50} data-full />
  </button>
</div>
<PokemonCard name={name} url={url} isBig />

<audio controls class="mt-5">
  <source src={audioURL} type="audio/ogg" />
  Tu navegador no soporta el elemento de audio.
</audio>
</section>
</Layout>

<script>
  import type { FavoritePokemons } from "@interfaces/favorite-pokemons";
  
  const handlePageLoad = () => {
    let favoritePokemons: FavoritePokemons[] = JSON.parse(
      localStorage.getItem("favorites") ?? "[]"
    );
    
    const btnFavorite = document.getElementById(
      "btn-favorite"
    ) as HTMLButtonElement;
    if (!btnFavorite) return;
    const name = btnFavorite.dataset.name ?? '';
    const id = btnFavorite.dataset.id ?? '';
    const isFavorite = favoritePokemons.some(pkm => pkm.name === name);

    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;
    const heartFull = btnFavorite.querySelector("[data-full]") as HTMLElement;

    if(isFavorite){
      heartOutline.classList.add("hidden");
      heartFull.classList.remove("hidden");
    }

    const toggleFavorite = () => {
      const isFavorite = favoritePokemons.some(pkm => pkm.name === name);

      if(isFavorite){
        //Eliminar de favoritos
        favoritePokemons = favoritePokemons.filter(pkmn => pkmn.name !== name);
      }else{
        //Añadir a favoritos
        favoritePokemons.push({id: Number(id), name:name});
      }

      localStorage.setItem("favorites", JSON.stringify(favoritePokemons));
    }

    btnFavorite.addEventListener("click", () => {
      heartOutline.classList.toggle("hidden");
      heartFull.classList.toggle("hidden");
      toggleFavorite();
    });
  };

  document.addEventListener("astro:page-load", handlePageLoad);
</script>

<style>
  a {
    @apply hover:underline;
  }
</style>
